$lvContainerPageContactForm: (
    contact_form_bg_color_btn:     map-get($complementary_blizzard_blue, "color_sea_nymph"),
    contact_form_border_color_btn: map-get($complementary_blizzard_blue, "color_sea_nymph"),
    contact_form_font_color_btn:   map-get($basic_colors, "color_black"),
    contact_form_check_font_color: map-get($basic_colors, "color_black"),
);
$lvContainerPageContactFormFont: 'Merriweather Sans Bold', sans-serif;

.lv-pg-contact {
    @include flex-center();
    @media only screen and (max-width: 1400px) {
        padding-right: 0rem;
        padding-left: 0rem;
    }
    & .card {
        border-radius: rem-convertor(0px);
        @media only screen and (max-width: 767px) {
            display: none;
        }
    }
    &-content {
        margin-left: rem-convertor(40px);
        @media only screen and (max-width: 1400px) {
            margin-left: rem-convertor(32px);
        }
        @media only screen and (max-width: 1200px) {
            margin-left: rem-convertor(32px);
            width: 80%;
        }
        @media only screen and (max-width: 992px) {
            margin-left: rem-convertor(24px);
        }
        @media only screen and (max-width: 768px) {
            margin-left: rem-convertor(16px);
        }
        @media only screen and (max-width: 767px) {
            margin-left: 0rem;
            width: 100%;
        }
        &-header {
            @include flex-center();
            flex-direction: column;
            margin-bottom: rem-convertor(50px);
            & h1, & p {
                margin-bottom: rem-convertor(0px);
                font-family: map-get($lvContainerPageContactForm, "contact_form_font_family");
            }
            & p {
                margin-top: rem-convertor(32px);
                @media only screen and (min-width: 320px) {
                    text-align: justify;
                }
            }
        }
        & .card-alternative {
            border-radius: rem-convertor(0px);
            @media only screen and (min-width: 768px) {
                display: none;
            }
            @media only screen and (max-width: 767px) {
                margin-bottom: rem-convertor(50px) !important;
            }
            @media only screen and (max-width: 375px) {
                width: rem-convertor(296px) !important;
            }
            & img {
                @media only screen and (max-width: 375px) {
                    width: rem-convertor(296px) !important;
                }
            }
        }
        &-body {
            form {
                margin-bottom: rem-convertor(0px);
            }
            & .form-control {
                border-radius: rem-convertor(0px);
                height: rem-convertor(60px);
            }
            & .form-message {
                height: rem-convertor(300px);
                resize: none;
            }
            & input[type="text"]:focus, input[type="email"]:focus, textarea:focus {
                border-color: transparent;
                box-shadow: 0 rem-convertor(1px) rem-convertor(1px) transparent inset, 0 0 rem-convertor(8px) transparent;
                outline: 0 none;
            }
            & input::placeholder, textarea::placeholder {
                font-style: italic;
            }
            & .form-check {
                margin-bottom: rem-convertor(0px);
                @media only screen and (max-width: 575px) and (min-width: 320px) {
                    @include flex-center();
                    flex-direction: column;
                }
                &-privacy-policy {
                    @media only screen and (max-width: 575px) and (min-width: 320px) {
                        flex-direction: row;
                    }
                }
                &-input {
                    width: rem-convertor(20px);
                    height: rem-convertor(20px);
                }
                &-label {
                    & .a-typography {
                        margin: rem-convertor(8px) 0rem;
                        padding: 0rem;
                        color: map-get($lvContainerPageContactForm, "contact_form_check_font_color");
                        font-style: normal;
                        font-variant: normal;
                        font-weight: normal;
                        text-align: left;
                        text-decoration: none;
                        white-space: normal;
                        word-break: normal;
                        word-spacing: normal;
                        text-decoration: underline;
                        text-indent: rem-convertor(0px);
                        &:visited, &:active {
                            color: map-get($lvContainerPageContactForm, "contact_form_check_font_color");
                        }
                        &:hover {
                            color: map-get($lvContainerPageContactForm, "contact_form_check_font_color");
                            cursor: pointer;
                        }
                    }
                }
                & .invalid-feedback {
                    @media only screen and (max-width: 767px) {
                        text-align: center;
                    }
                }
            }
            & .form-button {
                @media only screen and (max-width: 576px) {
                    @include flex-center();
                }
                & .btn {
                    border-radius: rem-convertor(0px);
                    height: rem-convertor(60px);
                    background-color: map-get($lvContainerPageContactForm, "contact_form_bg_color_btn");
                    border-color: map-get($lvContainerPageContactForm, "contact_form_border_color_btn");
                    border-radius: rem-convertor(0px);
                    color: map-get($lvContainerPageContactForm, "contact_form_font_color_btn");
                    font-weight: bold;
                    text-transform: uppercase;
                    &:focus {
                        border-color: transparent !important;
                        box-shadow: 0 rem-convertor(1px) rem-convertor(1px) transparent inset, 0 0 rem-convertor(1px) transparent !important;
                        outline: 0 none !important;
                    }
                }
            }
        }
    }
}